<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 파일과 매핑되어 실행될 자바 매퍼 파일 정보 -->
<mapper namespace="com.home.mapper.HomeMapper">

	<select id="search" parameterType="map" resultType="Home">
		select *
		from home
		<where>
			roadName is not null and
			dongCode = #{dongCode} and dealYear =
			#{dealYear}
			<if test="dealMonth != null">
				and dealMonth = #{dealMonth}
			</if>
		</where>
		order by dealYear desc, dealMonth desc, dealDay desc
	</select>

	<select id="searchByApartmentName" resultType="Home">
		select *
		from home
		<where>
			roadName is not null and
			apartmentName like concat('%',
			#{apartmentName}, '%')
		</where>
		order by dealYear desc, dealMonth desc, dealDay desc
	</select>

	<select id="searchBySigunguCode" resultType="Home">
		select *
		from home
		where
		roadName is not null and
		substr(dongCode, 1, 5) = #{sigunguCode}
		order by dealYear desc, dealMonth desc, dealDay desc
	</select>

	<select id="searchGugunApt" parameterType="map"
		resultType="Home">
		select *
		from dongcode d join home h
		where d.dongCode = h.dongCode and d.sidoName=#{sidoName} and
		replace(d.gugunName, ' ', '')=#{gugunName} and roadName is not null
		order by dealYear desc, dealMonth desc, dealDay desc
	</select>
    
    <select id="getAddressFilterSearch" parameterType="AddressFilter" resultType="Home">
      select *
      from home
        <where>
          roadName is not null and
          dongCode = #{dongCode} and dealYear =
          #{dealYear}
            <if test="dealMonth != 'null'">
              and dealMonth = #{dealMonth}
            </if>
          and cast(replace(dealAmount,',','') as unsigned) between #{minPrice} and #{maxPrice}
          and cast(area as double) between #{minArea} and #{maxArea}
          and cast(floor as signed) between #{minFloor} and #{maxFloor}
          and cast(buildYear as unsigned) between #{minYear} and #{maxYear}
        </where>
        order by dealYear desc, dealMonth desc, dealDay desc
    </select>
    
    <select id="getNameFilterList" parameterType="NameFilter" resultType="Home">
      select *
      from home
      <where>
        roadName is not null and
        apartmentName like concat('%',
        #{apartmentName}, '%')
        and cast(replace(dealAmount,',','') as unsigned) between #{minPrice} and #{maxPrice}
        and cast(area as double) between #{minArea} and #{maxArea}
        and cast(floor as signed) between #{minFloor} and #{maxFloor}
        and cast(buildYear as unsigned) between #{minYear} and #{maxYear}
      </where>
      order by dealYear desc, dealMonth desc, dealDay desc
    </select>

	<select id="getMinYear" resultType="string">
		select min(dealYear)
		from home
	</select>

	<select id="getMinMonth" parameterType="string"
		resultType="string">
		select min(dealMonth)
		from home
		where dealYear=#{minYear}
	</select>

	<delete id="deleteOld" parameterType="map">
		delete from home
		where
		dealYear=#{minYear} and dealMonth=#{minMonth}
	</delete>

	<select id="findNames" resultType="map">
		select sidoName, gugunName,
		dongName
		from dongcode
		where dongCode = #{dongCode}
	</select>

	<select id="getSidoList" resultType="string">
		select distinct sidoName
		from dongcode
	</select>

	<select id="getGugunList" resultType="string">
		select distinct gugunName
		from dongcode
		where gugunName is not null and sidoName = #{sidoName}
		order by gugunName
	</select>

	<select id="getDongList" resultType="map">
		select distinct dongName,
		dongCode
		from dongcode
		where dongName is not null and sidoName =
		#{sidoName} and gugunName = #{gugunName}
		order by dongName
	</select>

	<select id="getSigunguCodeList" resultType="string">
		select distinct
		substr(dongCode, 1, 5) as ExtractString
		from dongcode
	</select>

	<delete id="resetHome">
		DROP TABLE IF EXISTS `home`
	</delete>
	<insert id="createHome">CREATE TABLE `home` (
		`num` int NOT NULL AUTO_INCREMENT,
		`dongCode` bigint DEFAULT NULL,
		`apartmentName` varchar(40) DEFAULT NULL,
		`roadName` varchar(40) DEFAULT NULL,
		`roadNameBuildingBonCode` varchar(5) DEFAULT NULL,
		`roadNameBuildingBuCode` varchar(5) DEFAULT NULL,
		`dealAmount` varchar(20) DEFAULT NULL,
		`dealYear` int DEFAULT NULL,
		`dealMonth` int DEFAULT NULL,
		`dealDay` int DEFAULT NULL,
		`area` varchar(20) DEFAULT NULL,
		`floor` varchar(4) DEFAULT NULL,
		`buildYear` int DEFAULT NULL,
		PRIMARY KEY (`num`),
		KEY `home_dongCode_dongcode_dongCode_fk_idx` (`dongCode`) /*!80000
		INVISIBLE */,
		CONSTRAINT `home_ibfk_1` FOREIGN KEY (`dongCode`) REFERENCES `dongcode`
		(`dongCode`)
		) ENGINE=InnoDB AUTO_INCREMENT=3354474 DEFAULT CHARSET=utf8mb4
		COLLATE=utf8mb4_0900_ai_ci
	</insert>

	<insert id="insert" parameterType="Home">
		insert into home(dongCode,
		dealAmount, apartmentName, roadName, roadNameBuildingBonCode,
		roadNameBuildingBuCode, dealYear, dealMonth, dealDay, area, floor, buildYear)
		values(#{dongCode}, #{dealAmount}, #{apartmentName}, #{roadName},
		#{roadNameBuildingBonCode}, #{roadNameBuildingBuCode}, #{dealYear},
		#{dealMonth}, #{dealDay}, #{area}, #{floor}, #{buildYear})
	</insert>

	<update id="countUp" parameterType="Home">
		update home
		set count = count+1
		where num=#{num}
	</update>
	
	<select id="searchByCount" resultType="Home">
		select *
		from home
		order by count desc, cast(replace(dealAmount, ',', '') as unsigned) desc, dealYear desc, dealMonth desc, dealDay desc
		limit 5
	</select>
	
	
</mapper>